@model RubricMVC.Models.RubricListViewModel
@{
    ViewBag.Title = "Rubrics";
}
<div class="row-height-50"></div>
<div class="bg-light container p-4">
    <h1 class="text-dark">Rubric Maker</h1>
    <h5 class="text-dark mb-3">Create Analytic Rubrics</h5>
    @Html.ActionLink("Create a Rubric", "Create", "Rubric", null, new { @class = "btn btn-primary" })
</div>

<div class="container">

    <table class="table table-bordered table-responsive mt-3 " id="listTable">
        <thead>
            <tr>
                <th>
                    <div class="d-flex">
                        <p class="text-start text-nowrap me-2" onclick="sortEventTable(0)">@Html.DisplayNameFor(model => model.Rubrics.First().Name) <i class="bi bi-arrow-down-up"></i></p>

                    </div>
                </th>
                <th>
                    <div class="d-flex">
                        <p class="text-start text-nowrap me-2" onclick="sortEventTable(1)">
                            @Html.DisplayNameFor(model => model.Rubrics.First().Description) <i class="bi bi-arrow-down-up"></i>
                        </p>
                    </div>

                </th>
                <th>
                    <div class="d-flex">
                        <p class="text-start text-nowrap me-2" onclick="sortEventTable(2)">
                            @Html.DisplayNameFor(model => model.Rubrics.First().DateCreated) <i class="bi bi-arrow-down-up"></i>
                        </p>
                    </div>


                </th>
                <th>
                    <div class="d-flex">
                        <p class="text-start text-nowrap me-2" onclick="sortEventTable(3)">
                            @Html.DisplayNameFor(model => model.Rubrics.First().DateUpdated) <i class="bi bi-arrow-down-up"></i>
                        </p>
                    </div>


                </th>
                <th>
                    <div class="d-flex">
                        <p class="text-start text-nowrap me-2" onclick="sortEventTable(4)">
                            @Html.DisplayNameFor(model => model.Rubrics.First().ScoreTypeID) <i class="bi bi-arrow-down-up"></i>
                        </p>
                    </div>

                </th>


            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.Rubrics)
            {
                <tr>
                    <td>
                        <p class="text-primary">@Html.ActionLink(item.Name, "Details", "Rubric", new { rubricID = item.RubricID }, new { @class = "" })</p>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateUpdated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ScoreTypeID)
                    </td>

                </tr>
            }
        </tbody>

    </table>
    <div class="pagination justify-content-center">
        @Html.PageLinks(Model.PagingInfo, x => Url.Action("RubricList", new { page = x }))
    </div>
</div>